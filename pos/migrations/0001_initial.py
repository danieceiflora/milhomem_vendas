# Generated by Django 5.0.1 on 2025-11-01 17:50

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('customers', '0005_customer_is_generic'),
        ('outflows', '0003_paymentmethod_outflow_final_amount_and_more'),
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Rascunho'), ('finalized', 'Finalizada'), ('cancelled', 'Cancelada')], default='draft', max_length=20, verbose_name='Status')),
                ('session_key', models.CharField(blank=True, help_text='Chave da sessão para identificar vendas em rascunho', max_length=40, verbose_name='Chave de sessão')),
                ('subtotal', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Subtotal')),
                ('discount_total', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Desconto aplicado manualmente ou por diferença', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Desconto total')),
                ('total', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Total')),
                ('total_paid', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Total pago')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('finalized_at', models.DateTimeField(blank=True, null=True, verbose_name='Finalizado em')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pos_sales', to='customers.customer', verbose_name='Cliente')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pos_sales', to=settings.AUTH_USER_MODEL, verbose_name='Vendedor')),
            ],
            options={
                'verbose_name': 'Venda PDV',
                'verbose_name_plural': 'Vendas PDV',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LedgerEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('credit', 'Crédito'), ('debit', 'Débito')], max_length=10, verbose_name='Tipo')),
                ('status', models.CharField(choices=[('open', 'Em aberto'), ('settled', 'Liquidado'), ('cancelled', 'Cancelado')], default='open', max_length=10, verbose_name='Status')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Valor')),
                ('description', models.TextField(blank=True, help_text='Descrição do lançamento', verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('settled_at', models.DateTimeField(blank=True, null=True, verbose_name='Liquidado em')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ledger_entries', to='customers.customer', verbose_name='Cliente')),
                ('sale', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='ledger_entries', to='pos.sale', verbose_name='Venda relacionada')),
            ],
            options={
                'verbose_name': 'Lançamento',
                'verbose_name_plural': 'Lançamentos',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SaleItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Quantidade')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Preço unitário')),
                ('line_total', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Total do item')),
                ('unit_cost', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Custo unitário')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pos_sale_items', to='products.product', verbose_name='Produto')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='pos.sale', verbose_name='Venda')),
            ],
            options={
                'verbose_name': 'Item da venda',
                'verbose_name_plural': 'Itens da venda',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='SalePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_applied', models.DecimalField(decimal_places=2, help_text='Valor que foi efetivamente usado no pagamento', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Valor aplicado')),
                ('cash_tendered', models.DecimalField(blank=True, decimal_places=2, help_text='Valor entregue pelo cliente (apenas para dinheiro)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Valor recebido')),
                ('change_given', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Troco devolvido ao cliente (apenas para dinheiro)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Troco')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('payment_method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pos_payments', to='outflows.paymentmethod', verbose_name='Método de pagamento')),
                ('sale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='pos.sale', verbose_name='Venda')),
            ],
            options={
                'verbose_name': 'Pagamento',
                'verbose_name_plural': 'Pagamentos',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['status', 'user', 'session_key'], name='pos_sale_status_1d997b_idx'),
        ),
        migrations.AddIndex(
            model_name='sale',
            index=models.Index(fields=['customer', 'status'], name='pos_sale_custome_a4ba9d_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerentry',
            index=models.Index(fields=['customer', 'status'], name='pos_ledgere_custome_923c91_idx'),
        ),
        migrations.AddIndex(
            model_name='ledgerentry',
            index=models.Index(fields=['type', 'status'], name='pos_ledgere_type_89b4b2_idx'),
        ),
    ]
